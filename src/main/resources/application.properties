## DataSource settings: set here your own configurations for the database
## connection. In this example we have "netgloo_blog" as database name and
## "root" as username and password.
#datasource.url = jdbc:postgresql://localhost:5432/bmsc
#datasource.username = bmsc
#datasource.password = eMbMs1234
#datasource.driver-class-name=org.postgresql.Driver
#
## Use spring.jpa.properties.* for Hibernate native properties (the prefix is
## stripped before adding them to the entity manager)
#
#
## Keep the connection alive if idle for a long time (needed in production)
#datasource.testWhileIdle = true
#datasource.validationQuery = SELECT 1
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#hibernate.dialect = org.hibernate.dialect.PostgreSQL9Dialect
#
## Show or not log for each sql query
#hibernate.show-sql = true
#
## Hibernate ddl auto (create, create-drop, update)
#hibernate.hbm2ddl.auto = update
#
## Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy


spring.datasource.url = jdbc:postgresql://localhost:5432/bmsc
spring.datasource.username = bmsc
spring.datasource.password = eMbMs1234

spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.jpa.properties.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL9Dialect

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy